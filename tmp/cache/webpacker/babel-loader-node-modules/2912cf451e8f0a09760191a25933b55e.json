{"ast":null,"code":"import { loadGame, startBoard } from '../api/gameApi';\nimport { START_GAME_SUCCESS, RESTAR_GAME_SUCCESS, CELL_STATUS_SUCCESS, GAME_STATUS_SUCCESS, LOAD_GAME_SUCCESS, GAME_STATUS, GAME_ID_STATUS, PUT_FLAG, PUT_NUMBER, REMOVE_FLAG_SUCCESS, UPDATE_GAME, FLIP_CELL, LOAD_BOARD_SUCCESS, NOTHING } from '../constants/actionTypes';\nimport { COVERED_COLOR, DISCOVERED_COLOR } from '../constants/colors'; //export function startGameSuccess() {\n\nexport function startGameBoard() {\n  console.log(\"Estoy en startGameBoard dentro de /actions\"); //console.log(props)\n\n  var boardWithMines = loadGame();\n  console.log(boardWithMines);\n  console.log(\"listo\");\n  var data = {\n    board: boardWithMines,\n    game_status: 3,\n    board_status: startBoard(),\n    flipped_boxes: 0\n  };\n  fetch('/game/start', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log(\"respuesta del controlador start_game:\");\n    console.log(data); //si recibo data.message == \"Nuevo\", continua el flujo normal\n    //pero si recibo data.message == \"Guardado\"\n    //debo utilizar la respuesta para pintar las banderas\n\n    if (data.message == \"Guardado\") {\n      console.log(\"vamos a recuperar las banderas y los numeros\");\n      $(\".prueba-componente\").css('background', '#980f8c'); //color morado\n\n      var boardStatus = data.board_status;\n      paintFlagsAndNumbers(boardStatus);\n    } else {\n      if (data.message == \"Nuevo\") {\n        $(\".prueba-componente\").css('background', '#054bd8'); //color azul\n\n        startGameExit(data);\n      }\n    } //startGameExit(data);\n\n  })[\"catch\"](function (error) {\n    return console.log('error', error);\n  }); //}\n}\n\nfunction paintFlagsAndNumbers(boardStatus) {\n  console.log(\"Estamos en la funcion que buscara las posicones para colocar numeros, vacios y banderas\"); //buscar todas las posiciones con bandera y dibujarlas en la pagina\n\n  for (var row = 0; row < 10; row++) {\n    for (var column = 0; column < 10; column++) {\n      if (boardStatus[row][column] == 2) {\n        //colocar una bandera en esa posicion\n        console.log(\"Existe una bandera en la posicion row=\".concat(row, \" column=\").concat(column)); //var image = new Image(); //AQUI ESTA EL PROBLEMA, CARGA IMAGENES NUEVAS SIN CLASE AL RECUPERARLAS!!\n        //image.src= \"packs/media/images/flag-8654d5a5.png\"\n        //image.src = customFlag\n\n        console.log(\".cell.\".concat(row).concat(column));\n        $(\".flag.\".concat(row).concat(column)).show();\n        $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n      } else {\n        if (boardStatus[row][column] == 1) {\n          console.log(\"Existe un numero en la posicion row=\".concat(row, \" column=\").concat(column)); //debo lanzar un fetch para consultar el board en la base datos y saber que numeros\n          //estan colocados.\n\n          var data = {\n            coordinates: [row, column]\n          };\n          fetch('/game/get/number', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            console.log(\"respuesta del controlador get_number\");\n            console.log(data.board);\n            console.log(data.coordinates);\n            var currentBoard = data.board;\n            var row = data.coordinates[0];\n            var column = data.coordinates[1];\n            var paintNumber = currentBoard[row][column];\n\n            switch (paintNumber) {\n              case 0:\n                console.log(\"casilla sin valor numerico pero ya destapada\");\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n\n              case 1:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".one.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n\n              case 2:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".two.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n\n              case 3:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".three.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n\n              case 4:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".four.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n\n              case 5:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".five.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n\n              case 6:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".six.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n\n              case 7:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".seven.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n\n              case 8:\n                console.log(\"recuperamos el numero \".concat(paintNumber));\n                $(\".eight.\".concat(row).concat(column)).show();\n                $(\".cell.\".concat(row).concat(column)).css('background', DISCOVERED_COLOR);\n                break;\n            }\n          })[\"catch\"](function (error) {\n            return console.log('error', error);\n          });\n        }\n      }\n    }\n  }\n\n  return {\n    type: LOAD_GAME_SUCCESS\n  };\n}\n\nfunction startGameExit(data) {\n  console.log(\"estamos en la funcion startGameExit\");\n  return {\n    type: START_GAME_SUCCESS,\n    trash: data\n  };\n}\n\nexport function restartGame() {\n  console.log(\"Estamos en la funcion restartGame\");\n  $(\".prueba-componente\").css('background', '#054bd8'); //color azul\n\n  $(\".cell\").css('background', COVERED_COLOR);\n  $(\".flag\").hide();\n  $(\".fire\").hide();\n  $(\".bomb\").hide();\n  $(\".one\").hide();\n  $(\".two\").hide();\n  $(\".three\").hide();\n  $(\".four\").hide();\n  $(\".five\").hide();\n  $(\".six\").hide();\n  $(\".seven\").hide();\n  $(\".eight\").hide();\n  var boardWithMines = loadGame();\n  console.log(boardWithMines);\n  console.log(\"listo\");\n  return function (dispatch) {\n    console.log(\"despachamos la funcion que ejecutara el fetch\");\n    var data = {\n      board: boardWithMines,\n      game_status: 3,\n      board_status: startBoard(),\n      flipped_boxes: 0\n    };\n    fetch('/game/restart', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"respuesta del controlador reset_game:\");\n      console.log(data);\n      dispatch(restartGameSuccess(data));\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n}\n\nfunction restartGameSuccess(data) {\n  return {\n    type: RESTAR_GAME_SUCCESS,\n    gameId: data.game_id.$oid,\n    gameStatus: data.game_status,\n    flippedBoxes: data.flipped_boxes\n  };\n}\n\nexport function getStateForFlagCell(coordinates, decideAboutFlag, cell, props) {\n  console.log(\"estamos en la funcion getStateForFlagCell\");\n  console.log(coordinates);\n  console.log(decideAboutFlag);\n  console.log(cell);\n  return function (dispatch) {\n    var data = {\n      coordinates: coordinates\n    };\n    fetch('/game/flag', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var cellStatus = data.cell_status;\n      decideAboutFlag(cell, cellStatus, props);\n      console.log(\"respuesta del estado de la celda:\");\n      console.log(data.cell_status);\n      dispatch(flagSuccess(cellStatus));\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n}\n\nfunction flagSuccess(cellStatus) {\n  console.log(\"se obtuvo el valor de la celda:\");\n  console.log(cellStatus);\n  return {\n    type: CELL_STATUS_SUCCESS,\n    cellStatus: cellStatus\n  };\n}\n\nexport function getCellState(coordinates, decideAboutNumberOrBomb, cell, props) {\n  console.log(\"estamos en la funcion getCellState\");\n  return function (dispatch) {\n    var data = {\n      coordinates: coordinates\n    };\n    fetch('/game/get/cellStatus', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"obtengo respuesta de la base de datos\");\n      var cellStatus = data.cell_status;\n      var flagAlert = data.flag_alert;\n      var zerosCoordinates = 0;\n      var numbersCoordinates = 0;\n      console.log(\"valor de zero alert \".concat(data.zero_alert));\n\n      if (data.zero_alert == 1) {\n        zerosCoordinates = data.zeros_coordinates_to_uncover;\n        numbersCoordinates = data.numbers_coordinates_to_uncover;\n        console.log(\"coordenadas de los zeros\");\n        console.log(data.zeros_coordinates_to_uncover);\n        console.log(\"coordenadas de los numeros\");\n        console.log(data.numbers_coordinates_to_uncover);\n      }\n\n      decideAboutNumberOrBomb(cell, cellStatus, props, flagAlert, zerosCoordinates, numbersCoordinates);\n      console.log(\"respuesta del estado de la celda:\");\n      console.log(data.cell_status);\n      dispatch(getCellStateSuccess(data));\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n}\n\nfunction getCellStateSuccess(data) {\n  console.log(\"se obtuvo el valor de la celda:\");\n  console.log(data);\n  return {\n    type: CELL_STATUS_SUCCESS,\n    cellStatus: data.cell_status,\n    flippedBoxes: data.flipped_boxes,\n    gameStatus: data.game_status\n  };\n}\n\nexport function knowTheGameState(gameStatus) {\n  if (gameStatus == 3) {\n    console.log(\"Estamos en un juego nuevo, obtener el Id para ir guardando los cambios\");\n    return function (dispatch) {\n      fetch('/game/get/id').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        dispatch(gameIdSuccess(data));\n      })[\"catch\"](function (error) {\n        return console.log('error', error);\n      });\n    };\n  } else {\n    if (gameStatus == 0) {\n      console.log(\"ya se estaba jugando, restaurar el tablero guardado\");\n    } else {\n      if (gameStatus == 1) {\n        console.log(\"El jugador ha perdido\");\n      } else {\n        if (gameStatus == 2) {\n          console.log(\"El jugador ha ganado\");\n        }\n      }\n    }\n  }\n\n  return {\n    type: NOTHING\n  };\n}\n\nfunction gameIdSuccess(data) {\n  console.log(\"llegamos a GAMEIDSUCCESS\");\n  return {\n    type: GAME_ID_STATUS,\n    gameId: data.game_id.$oid,\n    gameStatus: data.game_status,\n    flippedBoxes: data.flipped_boxes\n  };\n}\n\nexport function getStatusGame(props) {\n  //Esta funcion parece ser innecesaria\n  console.log(\"Estamos en la funcion getStatusGame\");\n  console.log(props);\n  return {\n    type: GAME_STATUS_SUCCESS,\n    data: props //AUN NO SE HA ESCRITO LA RESPUESTA EN STATES.JS\n\n  };\n}\nexport function setBoardFlag(gameId, coordinates) {\n  console.log(\"llegamos a setBoardFlag\");\n  return function (dispatch) {\n    var data = {\n      gameId: gameId,\n      coordinates: coordinates\n    };\n    fetch('/game/push/flag', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"respuesta del estado de la celda:\");\n      console.log(data);\n      console.log(data.game_status);\n      dispatch(setBoardFlagSuccess(data.game_status));\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n}\n\nfunction setBoardFlagSuccess(gameStatus) {\n  console.log(\"llegamos a setBoardFlagSuccess\");\n  return {\n    type: PUT_FLAG,\n    gameStatus: gameStatus\n  };\n}\n\nexport function setBoardNumber(gameId, coordinates, number) {\n  console.log(\"llegamos a setBoardNumber\");\n  return function (dispatch) {\n    var data = {\n      gameId: gameId,\n      coordinates: coordinates,\n      number: number\n    };\n    fetch('/game/push/Number', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"respuesta del estado de la celda:\");\n      console.log(data);\n      console.log(data.game_status);\n      dispatch(setBoardNumberSuccess(data.game_status));\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n}\n\nfunction setBoardNumberSuccess(gameStatus) {\n  console.log(\"llegamos a setBoardNumberSuccess\");\n  return {\n    type: PUT_NUMBER,\n    gameStatus: gameStatus\n  };\n}\n\nexport function removeBoardFlag(gameId, coordinates) {\n  console.log(\"llegamos a removeBoardFlag\");\n  return function (dispatch) {\n    var data = {\n      gameId: gameId,\n      coordinates: coordinates\n    };\n    fetch('/game/remove/flag', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"respuesta del estado de la celda:\"); //la bandera se elimino\n\n      console.log(data);\n      dispatch(removeBoardFlagSuccess(data.game_status));\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n}\n\nfunction removeBoardFlagSuccess() {\n  console.log(\"llegamos a la funcion removeBoardFlagSuccess\");\n  return {\n    type: REMOVE_FLAG_SUCCESS\n  };\n}","map":{"version":3,"sources":["/home/valter/Documents/HOMIE/PROYECTO/Proyect/Search-Mines/app/javascript/src/actions/actions.js"],"names":["loadGame","startBoard","START_GAME_SUCCESS","RESTAR_GAME_SUCCESS","CELL_STATUS_SUCCESS","GAME_STATUS_SUCCESS","LOAD_GAME_SUCCESS","GAME_STATUS","GAME_ID_STATUS","PUT_FLAG","PUT_NUMBER","REMOVE_FLAG_SUCCESS","UPDATE_GAME","FLIP_CELL","LOAD_BOARD_SUCCESS","NOTHING","COVERED_COLOR","DISCOVERED_COLOR","startGameBoard","console","log","boardWithMines","data","board","game_status","board_status","flipped_boxes","fetch","method","body","JSON","stringify","headers","then","response","json","message","$","css","boardStatus","paintFlagsAndNumbers","startGameExit","error","row","column","show","coordinates","currentBoard","paintNumber","type","trash","restartGame","hide","dispatch","restartGameSuccess","gameId","game_id","$oid","gameStatus","flippedBoxes","getStateForFlagCell","decideAboutFlag","cell","props","cellStatus","cell_status","flagSuccess","getCellState","decideAboutNumberOrBomb","flagAlert","flag_alert","zerosCoordinates","numbersCoordinates","zero_alert","zeros_coordinates_to_uncover","numbers_coordinates_to_uncover","getCellStateSuccess","knowTheGameState","gameIdSuccess","getStatusGame","setBoardFlag","setBoardFlagSuccess","setBoardNumber","number","setBoardNumberSuccess","removeBoardFlag","removeBoardFlagSuccess"],"mappings":"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","sourcesContent":["import { loadGame, startBoard } from '../api/gameApi';\nimport {\n  START_GAME_SUCCESS,\n  RESTAR_GAME_SUCCESS,\n  CELL_STATUS_SUCCESS,\n  GAME_STATUS_SUCCESS,\n  LOAD_GAME_SUCCESS,\n  GAME_STATUS,\n  GAME_ID_STATUS,\n  PUT_FLAG,\n  PUT_NUMBER,\n  REMOVE_FLAG_SUCCESS,\n  UPDATE_GAME,\n  FLIP_CELL,\n  LOAD_BOARD_SUCCESS,\n  NOTHING\n} from '../constants/actionTypes';\nimport {\n  COVERED_COLOR,\n  DISCOVERED_COLOR\n  } from '../constants/colors';\n\n//export function startGameSuccess() {\nexport function startGameBoard() {\n  console.log(\"Estoy en startGameBoard dentro de /actions\")\n  //console.log(props)\n  var boardWithMines = loadGame()\n  console.log(boardWithMines);\n  console.log(\"listo\")\n    let data = {\n      board: boardWithMines,\n      game_status: 3,\n      board_status: startBoard(),\n      flipped_boxes: 0\n    }\n    fetch('/game/start', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"respuesta del controlador start_game:\");\n      console.log(data);\n      //si recibo data.message == \"Nuevo\", continua el flujo normal\n      //pero si recibo data.message == \"Guardado\"\n      //debo utilizar la respuesta para pintar las banderas\n      if (data.message == \"Guardado\") {\n        console.log(\"vamos a recuperar las banderas y los numeros\");\n        $(`.prueba-componente`).css('background', '#980f8c'); //color morado\n        var boardStatus = data.board_status\n        paintFlagsAndNumbers(boardStatus)\n      } else {\n        if (data.message == \"Nuevo\") {\n          $(`.prueba-componente`).css('background', '#054bd8'); //color azul\n          startGameExit(data);\n        }\n      }\n      //startGameExit(data);\n    })\n    .catch(error => console.log('error', error));\n  //}\n}\n\nfunction paintFlagsAndNumbers(boardStatus) {\n  console.log(\"Estamos en la funcion que buscara las posicones para colocar numeros, vacios y banderas\")\n  //buscar todas las posiciones con bandera y dibujarlas en la pagina\n  for (var row = 0; row < 10; row++) {\n    for (var column = 0; column < 10; column++) {\n      if (boardStatus[row][column] == 2) {\n        //colocar una bandera en esa posicion\n        console.log(`Existe una bandera en la posicion row=${row} column=${column}`)\n        //var image = new Image(); //AQUI ESTA EL PROBLEMA, CARGA IMAGENES NUEVAS SIN CLASE AL RECUPERARLAS!!\n        //image.src= \"packs/media/images/flag-8654d5a5.png\"\n        //image.src = customFlag\n        console.log(`.cell.${row}${column}`)\n        $(`.flag.${row}${column}`).show()\n        $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n      } else {\n        if (boardStatus[row][column] == 1) {\n          console.log(`Existe un numero en la posicion row=${row} column=${column}`)\n          //debo lanzar un fetch para consultar el board en la base datos y saber que numeros\n          //estan colocados.\n          let data = {\n            coordinates: [row, column]\n          }\n          fetch('/game/get/number', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json' }\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log(\"respuesta del controlador get_number\")\n            console.log(data.board)\n            console.log(data.coordinates)\n            let currentBoard = data.board;\n            let row = data.coordinates[0]\n            let column = data.coordinates[1]\n            let paintNumber = currentBoard[row][column];\n            switch(paintNumber){\n              case 0:\n                console.log(\"casilla sin valor numerico pero ya destapada\");\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n              case 1:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.one.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n              case 2:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.two.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n              case 3:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.three.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n              case 4:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.four.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n              case 5:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.five.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n              case 6:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.six.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n              case 7:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.seven.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n              case 8:\n                console.log(`recuperamos el numero ${paintNumber}`);\n                $(`.eight.${row}${column}`).show()\n                $(`.cell.${row}${column}`).css('background', DISCOVERED_COLOR);\n                break\n            }\n          })\n          .catch(error => console.log('error', error));\n        }\n      }\n    }\n  }\n  return {\n    type: LOAD_GAME_SUCCESS\n  }\n}\n\nfunction startGameExit(data) {\n  console.log(\"estamos en la funcion startGameExit\")\n  return {\n    type: START_GAME_SUCCESS,\n    trash: data\n  };\n}\n\nexport function restartGame() {\n  console.log(\"Estamos en la funcion restartGame\")\n  $(`.prueba-componente`).css('background', '#054bd8'); //color azul\n  $(`.cell`).css('background', COVERED_COLOR);\n  $(`.flag`).hide();\n  $(`.fire`).hide();\n  $(`.bomb`).hide();\n  $(`.one`).hide();\n  $(`.two`).hide();\n  $(`.three`).hide();\n  $(`.four`).hide();\n  $(`.five`).hide();\n  $(`.six`).hide();\n  $(`.seven`).hide();\n  $(`.eight`).hide();\n  var boardWithMines = loadGame()\n  console.log(boardWithMines);\n  console.log(\"listo\")\n  return function(dispatch) {\n    console.log(\"despachamos la funcion que ejecutara el fetch\")\n    let data = {\n      board: boardWithMines,\n      game_status: 3,\n      board_status: startBoard(),\n      flipped_boxes: 0\n    }\n    fetch('/game/restart', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"respuesta del controlador reset_game:\");\n      console.log(data);\n      dispatch(restartGameSuccess(data));\n    })\n    .catch(error => console.log('error', error));\n  }\n}\n\nfunction restartGameSuccess(data) {\n  return {\n    type: RESTAR_GAME_SUCCESS,\n    gameId: data.game_id.$oid,\n    gameStatus: data.game_status,\n    flippedBoxes: data.flipped_boxes\n  }\n}\n\nexport function getStateForFlagCell(coordinates, decideAboutFlag, cell, props) {\n  console.log(\"estamos en la funcion getStateForFlagCell\");\n  console.log(coordinates)\n  console.log(decideAboutFlag)\n  console.log(cell)\n  return function(dispatch) {\n    let data = {\n      coordinates: coordinates\n    }\n    fetch('/game/flag', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => {\n      let cellStatus = data.cell_status\n      decideAboutFlag(cell, cellStatus, props)\n      console.log(\"respuesta del estado de la celda:\")\n      console.log(data.cell_status);\n      dispatch(flagSuccess(cellStatus));\n    })\n    .catch(error => console.log('error', error));\n  }\n}\n\nfunction flagSuccess(cellStatus) {\n  console.log(\"se obtuvo el valor de la celda:\");\n  console.log(cellStatus);\n  return {\n    type: CELL_STATUS_SUCCESS,\n    cellStatus: cellStatus\n  };\n}\n\nexport function getCellState(coordinates, decideAboutNumberOrBomb, cell, props) {\n  console.log(\"estamos en la funcion getCellState\");\n  return function(dispatch) {\n    let data = {\n      coordinates: coordinates\n    }\n    fetch('/game/get/cellStatus', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"obtengo respuesta de la base de datos\")\n      let cellStatus = data.cell_status\n      let flagAlert = data.flag_alert\n      let zerosCoordinates = 0\n      let numbersCoordinates = 0\n      console.log(`valor de zero alert ${data.zero_alert}`)\n      if (data.zero_alert == 1) {\n        zerosCoordinates = data.zeros_coordinates_to_uncover\n        numbersCoordinates = data.numbers_coordinates_to_uncover\n        console.log(\"coordenadas de los zeros\")\n        console.log(data.zeros_coordinates_to_uncover)\n        console.log(\"coordenadas de los numeros\")\n        console.log(data.numbers_coordinates_to_uncover)\n      }\n      decideAboutNumberOrBomb(cell, cellStatus, props, flagAlert, zerosCoordinates, numbersCoordinates)\n      console.log(\"respuesta del estado de la celda:\")\n      console.log(data.cell_status);\n      dispatch(getCellStateSuccess(data));\n    })\n    .catch(error => console.log('error', error));\n  }\n}\n\nfunction getCellStateSuccess(data) {\n  console.log(\"se obtuvo el valor de la celda:\");\n  console.log(data);\n  return {\n    type: CELL_STATUS_SUCCESS,\n    cellStatus: data.cell_status,\n    flippedBoxes: data.flipped_boxes,\n    gameStatus: data.game_status\n  };\n}\n\nexport function knowTheGameState(gameStatus) {\n  if (gameStatus == 3) {\n    console.log(\"Estamos en un juego nuevo, obtener el Id para ir guardando los cambios\")\n    return function(dispatch) {\n      fetch('/game/get/id')\n      .then(response => response.json())\n      .then(data =>{\n        console.log(data);\n        dispatch(gameIdSuccess(data));\n      })\n      .catch(error => console.log('error', error));\n    }\n\n  } else {\n    if (gameStatus == 0) {\n      console.log(\"ya se estaba jugando, restaurar el tablero guardado\")\n    } else {\n      if (gameStatus == 1) {\n        console.log(\"El jugador ha perdido\")\n      } else {\n        if (gameStatus == 2) {\n          console.log(\"El jugador ha ganado\")\n        }\n      }\n    }\n  }\n  return {\n    type: NOTHING\n  }\n}\n\nfunction gameIdSuccess(data) {\n  console.log(\"llegamos a GAMEIDSUCCESS\")\n  return {\n    type: GAME_ID_STATUS,\n    gameId: data.game_id.$oid,\n    gameStatus: data.game_status,\n    flippedBoxes: data.flipped_boxes\n  }\n}\n\nexport function getStatusGame (props) {\n  //Esta funcion parece ser innecesaria\n  console.log(\"Estamos en la funcion getStatusGame\")\n  console.log(props)\n  return {\n    type: GAME_STATUS_SUCCESS,\n    data: props   //AUN NO SE HA ESCRITO LA RESPUESTA EN STATES.JS\n  }\n}\n\nexport function setBoardFlag (gameId, coordinates) {\n  console.log(\"llegamos a setBoardFlag\")\n  return function(dispatch) {\n    let data = {\n      gameId: gameId,\n      coordinates: coordinates\n    }\n    fetch('/game/push/flag', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"respuesta del estado de la celda:\")\n      console.log(data)\n      console.log(data.game_status);\n      dispatch(setBoardFlagSuccess(data.game_status));\n    })\n    .catch(error => console.log('error', error));\n  }\n}\n\nfunction setBoardFlagSuccess (gameStatus) {\n  console.log(\"llegamos a setBoardFlagSuccess\")\n  return {\n    type: PUT_FLAG,\n    gameStatus: gameStatus\n  }\n}\n\nexport function setBoardNumber (gameId, coordinates, number) {\n  console.log(\"llegamos a setBoardNumber\")\n  return function(dispatch) {\n    let data = {\n      gameId: gameId,\n      coordinates: coordinates,\n      number: number\n    }\n    fetch('/game/push/Number', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"respuesta del estado de la celda:\")\n      console.log(data)\n      console.log(data.game_status);\n      dispatch(setBoardNumberSuccess(data.game_status));\n    })\n    .catch(error => console.log('error', error));\n  }\n}\n\nfunction setBoardNumberSuccess (gameStatus) {\n  console.log(\"llegamos a setBoardNumberSuccess\")\n  return {\n    type: PUT_NUMBER,\n    gameStatus: gameStatus\n  }\n}\n\nexport function removeBoardFlag (gameId, coordinates) {\n  console.log(\"llegamos a removeBoardFlag\")\n  return function(dispatch) {\n    let data = {\n      gameId: gameId,\n      coordinates: coordinates\n    }\n    fetch('/game/remove/flag', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {'Content-Type': 'application/json' }\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"respuesta del estado de la celda:\") //la bandera se elimino\n      console.log(data)\n      dispatch(removeBoardFlagSuccess(data.game_status));\n    })\n    .catch(error => console.log('error', error));\n  }\n}\n\nfunction removeBoardFlagSuccess () {\n  console.log(\"llegamos a la funcion removeBoardFlagSuccess\")\n  return {\n    type: REMOVE_FLAG_SUCCESS\n  }\n}"]},"metadata":{},"sourceType":"module"}