{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { START_GAME_SUCCESS, RESTAR_GAME_SUCCESS, CELL_STATUS_SUCCESS, GAME_STATUS, GAME_ID_STATUS, PUT_FLAG, PUT_NUMBER } from '../constants/actionTypes';\nvar gameState = {\n  data: [],\n  flippedBoxes: {\n    quantity: 0\n  },\n  gameStatus: {\n    status: 3\n  },\n  cellStatus: {\n    status: 0\n  }\n};\n\nfunction gameReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : gameState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_GAME_SUCCESS:\n      return _objectSpread({}, state, {\n        trash: action.trash\n      });\n\n    case CELL_STATUS_SUCCESS:\n      return _objectSpread({}, state, {\n        cellStatus: {\n          status: action.cellStatus\n        },\n        flippedBoxes: {\n          quantity: action.flippedBoxes\n        },\n        gameStatus: {\n          status: action.gameStatus\n        }\n      });\n\n    case GAME_STATUS:\n      return _objectSpread({}, state, {\n        gameStatus: {\n          status: action.gameStatus\n        }\n      });\n\n    case GAME_ID_STATUS:\n      return _objectSpread({}, state, {\n        gameId: action.gameId,\n        gameStatus: {\n          status: action.gameStatus\n        },\n        flippedBoxes: {\n          quantity: action.flippedBoxes\n        }\n      });\n\n    case PUT_FLAG:\n      return _objectSpread({}, state, {\n        gameStatus: {\n          status: action.gameStatus\n        }\n      });\n\n    case PUT_NUMBER:\n      return _objectSpread({}, state, {\n        gameStatus: {\n          status: action.gameStatus\n        }\n      });\n\n    case RESTAR_GAME_SUCCESS:\n      return _objectSpread({}, state, {\n        gameId: action.gameId,\n        gameStatus: {\n          status: action.gameStatus\n        },\n        flippedBoxes: {\n          quantity: action.flippedBoxes\n        }\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default gameReducer;","map":{"version":3,"sources":["/home/valter/Documents/HOMIE/PROYECTO/Proyect/Search-Mines/app/javascript/src/reducers/states.js"],"names":["START_GAME_SUCCESS","RESTAR_GAME_SUCCESS","CELL_STATUS_SUCCESS","GAME_STATUS","GAME_ID_STATUS","PUT_FLAG","PUT_NUMBER","gameState","data","flippedBoxes","quantity","gameStatus","status","cellStatus","gameReducer","state","action","type","trash","gameId"],"mappings":";;;;;;AAAA,SACEA,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,WAJF,EAKEC,cALF,EAMEC,QANF,EAOEC,UAPF,QAQS,0BART;AAUE,IAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,YAAY,EAAE;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAFE;AAGhBC,EAAAA,UAAU,EAAE;AAACC,IAAAA,MAAM,EAAE;AAAT,GAHI;AAIhBC,EAAAA,UAAU,EAAE;AAACD,IAAAA,MAAM,EAAE;AAAT;AAJI,CAAlB;;AAOA,SAASE,WAAT,GAAgD;AAAA,MAA3BC,KAA2B,uEAAnBR,SAAmB;AAAA,MAARS,MAAQ;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKjB,kBAAL;AACE,+BACKe,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAFhB;;AAKF,SAAKhB,mBAAL;AACE,+BACKa,KADL;AAEEF,QAAAA,UAAU,EAAE;AAACD,UAAAA,MAAM,EAAEI,MAAM,CAACH;AAAhB,SAFd;AAGEJ,QAAAA,YAAY,EAAE;AAACC,UAAAA,QAAQ,EAAEM,MAAM,CAACP;AAAlB,SAHhB;AAIEE,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAEI,MAAM,CAACL;AAAhB;AAJd;;AAOF,SAAKR,WAAL;AACE,+BACKY,KADL;AAEEJ,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAEI,MAAM,CAACL;AAAhB;AAFd;;AAKF,SAAKP,cAAL;AACE,+BACKW,KADL;AAEEI,QAAAA,MAAM,EAAEH,MAAM,CAACG,MAFjB;AAGER,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAEI,MAAM,CAACL;AAAhB,SAHd;AAIEF,QAAAA,YAAY,EAAE;AAACC,UAAAA,QAAQ,EAAEM,MAAM,CAACP;AAAlB;AAJhB;;AAOF,SAAKJ,QAAL;AACE,+BACKU,KADL;AAEEJ,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAEI,MAAM,CAACL;AAAhB;AAFd;;AAKF,SAAKL,UAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAEI,MAAM,CAACL;AAAhB;AAFd;;AAKF,SAAKV,mBAAL;AACE,+BACKc,KADL;AAEEI,QAAAA,MAAM,EAAEH,MAAM,CAACG,MAFjB;AAGER,QAAAA,UAAU,EAAE;AAACC,UAAAA,MAAM,EAAEI,MAAM,CAACL;AAAhB,SAHd;AAIEF,QAAAA,YAAY,EAAE;AAACC,UAAAA,QAAQ,EAAEM,MAAM,CAACP;AAAlB;AAJhB;;AAOF;AACE,aAAOM,KAAP;AAlDJ;AAoDD;;AACD,eAAeD,WAAf","sourcesContent":["import {\n  START_GAME_SUCCESS,\n  RESTAR_GAME_SUCCESS,\n  CELL_STATUS_SUCCESS,\n  GAME_STATUS,\n  GAME_ID_STATUS,\n  PUT_FLAG,\n  PUT_NUMBER  \n  } from '../constants/actionTypes';\n  \n  const gameState = {\n    data: [],\n    flippedBoxes: {quantity: 0},\n    gameStatus: {status: 3},\n    cellStatus: {status: 0}\n  };\n\n  function gameReducer(state = gameState, action) {\n    switch(action.type){\n      case START_GAME_SUCCESS:\n        return {\n          ...state,\n          trash: action.trash\n        };\n\n      case CELL_STATUS_SUCCESS:\n        return {\n          ...state,\n          cellStatus: {status: action.cellStatus},\n          flippedBoxes: {quantity: action.flippedBoxes},\n          gameStatus: {status: action.gameStatus}\n        }\n\n      case GAME_STATUS:\n        return {\n          ...state,\n          gameStatus: {status: action.gameStatus}\n        };\n\n      case GAME_ID_STATUS:\n        return {\n          ...state,\n          gameId: action.gameId,\n          gameStatus: {status: action.gameStatus},\n          flippedBoxes: {quantity: action.flippedBoxes}\n        };\n\n      case PUT_FLAG:\n        return {\n          ...state,\n          gameStatus: {status: action.gameStatus}\n        }\n\n      case PUT_NUMBER:\n        return {\n          ...state,\n          gameStatus: {status: action.gameStatus}\n        }\n\n      case RESTAR_GAME_SUCCESS:\n        return {\n          ...state,\n          gameId: action.gameId,\n          gameStatus: {status: action.gameStatus},\n          flippedBoxes: {quantity: action.flippedBoxes}\n        }\n      \n      default:\n        return state\n    }\n  }\n  export default gameReducer;"]},"metadata":{},"sourceType":"module"}