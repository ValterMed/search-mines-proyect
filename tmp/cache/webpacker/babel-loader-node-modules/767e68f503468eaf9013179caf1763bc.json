{"ast":null,"code":"export function loadGame() {\n  console.log(\"Estoy en loadGame dentro de /api\");\n  var zerosBoard = startBoard();\n  return setMines(zerosBoard);\n}\nexport function startBoard() {\n  var board = [];\n  var addRow = [];\n\n  for (var row = 0; row < 10; row++) {\n    for (var column = 0; column < 10; column++) {\n      addRow[column] = 0;\n    }\n\n    board[row] = addRow;\n    addRow = [];\n  }\n\n  return board;\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction setMines(board) {\n  for (var row = 0; row < 10; row++) {\n    var column = getRandomInt(0, 10);\n    board[row][column] = 9; // 9 es bomba\n\n    if (column == 0) {\n      //solo puedo moverme una casilla a la derecha\n      if (board[row][column + 1] != 9) {\n        //si hay una bomba en esa casilla, no se incrementa el valor de la misma\n        board[row][column + 1] += 1;\n      }\n\n      if (row == 0) {\n        if (board[row + 1][column] != 9) {\n          board[row + 1][column] += 1;\n        }\n\n        if (board[row + 1][column + 1] != 9) {\n          board[row + 1][column + 1] += 1;\n        }\n      } else {\n        if (row <= 8) {\n          //puedo moverme una fila abajo y desplazarme una columna a la derecha\n          if (board[row - 1][column] != 9) {\n            board[row - 1][column] += 1;\n          }\n\n          if (board[row - 1][column + 1] != 9) {\n            board[row - 1][column + 1] += 1;\n          }\n\n          if (board[row + 1][column] != 9) {\n            board[row + 1][column] += 1;\n          }\n\n          if (board[row + 1][column + 1] != 9) {\n            board[row + 1][column + 1] += 1;\n          }\n        } else {\n          //significa que row == 9\n          if (board[row - 1][column] != 9) {\n            board[row - 1][column] += 1;\n          }\n\n          if (board[row - 1][column + 1] != 9) {\n            board[row - 1][column + 1] += 1;\n          }\n        }\n      }\n    } else {\n      if (column <= 8) {\n        //puedo moverme una casilla a la izq y una a la derecha\n        if (board[row][column - 1] != 9) {\n          board[row][column - 1] += 1;\n        }\n\n        if (board[row][column + 1] != 9) {\n          board[row][column + 1] += 1;\n        }\n\n        if (row == 0) {\n          if (board[row + 1][column - 1] != 9) {\n            board[row + 1][column - 1] += 1;\n          }\n\n          if (board[row + 1][column] != 9) {\n            board[row + 1][column] += 1;\n          }\n\n          if (board[row + 1][column + 1] != 9) {\n            board[row + 1][column + 1] += 1;\n          }\n        } else {\n          if (row <= 8) {\n            if (board[row - 1][column - 1] != 9) {\n              board[row - 1][column - 1] += 1;\n            }\n\n            if (board[row - 1][column] != 9) {\n              board[row - 1][column] += 1;\n            }\n\n            if (board[row - 1][column + 1] != 9) {\n              board[row - 1][column + 1] += 1;\n            }\n\n            if (board[row + 1][column - 1] != 9) {\n              board[row + 1][column - 1] += 1;\n            }\n\n            if (board[row + 1][column] != 9) {\n              board[row + 1][column] += 1;\n            }\n\n            if (board[row + 1][column + 1] != 9) {\n              board[row + 1][column + 1] += 1;\n            }\n          } else {\n            //significa que row == 9\n            if (board[row - 1][column - 1] != 9) {\n              board[row - 1][column - 1] += 1;\n            }\n\n            if (board[row - 1][column] != 9) {\n              board[row - 1][column] += 1;\n            }\n\n            if (board[row - 1][column + 1] != 9) {\n              board[row - 1][column + 1] += 1;\n            }\n          }\n        }\n      } else {\n        //significa que column == 9\n        if (board[row][column - 1] != 9) {\n          board[row][column - 1] += 1;\n        }\n\n        if (row == 0) {\n          if (board[row + 1][column - 1] != 9) {\n            board[row + 1][column - 1] += 1;\n          }\n\n          if (board[row + 1][column] != 9) {\n            board[row + 1][column] += 1;\n          }\n        } else {\n          if (row <= 8) {\n            if (board[row - 1][column] != 9) {\n              board[row - 1][column] += 1;\n            }\n\n            if (board[row - 1][column - 1] != 9) {\n              board[row - 1][column - 1] += 1;\n            }\n\n            if (board[row + 1][column] != 9) {\n              board[row + 1][column] += 1;\n            }\n\n            if (board[row + 1][column - 1] != 9) {\n              board[row + 1][column - 1] += 1;\n            }\n          } else {\n            //significa que row == 9\n            if (board[row - 1][column] != 9) {\n              board[row - 1][column] += 1;\n            }\n\n            if (board[row - 1][column - 1] != 9) {\n              board[row - 1][column - 1] += 1;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return board;\n}","map":{"version":3,"sources":["/home/valter/Documents/HOMIE/PROYECTO/Proyect/Search-Mines/app/javascript/src/api/gameApi.js"],"names":["loadGame","console","log","zerosBoard","startBoard","setMines","board","addRow","row","column","getRandomInt","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["export function loadGame() {\n  console.log(\"Estoy en loadGame dentro de /api\");\n  const zerosBoard = startBoard();\n  return setMines(zerosBoard);\n}\n\nexport function startBoard() {\n  var board = [];\n  var addRow = [];\n  for (var row = 0; row < 10; row++) {\n    for (var column = 0; column < 10; column++) {\n      addRow[column] = 0;\n    }\n    board[row] = addRow;\n    addRow = [];\n  }\n  return board\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction setMines(board) {\n  for (var row = 0; row < 10; row++) {\n    var column = getRandomInt(0, 10);\n    board[row][column] = 9; // 9 es bomba\n    if (column == 0) {\n      //solo puedo moverme una casilla a la derecha\n      if (board[row][column+1] != 9) {\n        //si hay una bomba en esa casilla, no se incrementa el valor de la misma\n        board[row][column+1] += 1;\n      }\n      if ( row == 0 ) {\n        if (board[row+1][column] != 9) {\n          board[row+1][column] += 1;\n        }\n        if (board[row+1][column+1] != 9) {\n          board[row+1][column+1] += 1;\n        }\n      } else {\n        if ( row <= 8 ) {\n          //puedo moverme una fila abajo y desplazarme una columna a la derecha\n          if (board[row-1][column] != 9) {\n            board[row-1][column] += 1;\n          }\n          if (board[row-1][column+1] != 9) {\n            board[row-1][column+1] += 1;\n          }\n          if (board[row+1][column] != 9) {\n            board[row+1][column] += 1;\n          }\n          if (board[row+1][column+1] != 9) {\n            board[row+1][column+1] += 1;\n          }\n        } else {\n          //significa que row == 9\n          if (board[row-1][column] != 9) {\n            board[row-1][column] += 1;\n          }\n          if (board[row-1][column+1] != 9) {\n            board[row-1][column+1] += 1;\n          }\n        }\n      }\n    } else {\n      if (column <= 8) {\n        //puedo moverme una casilla a la izq y una a la derecha\n        if (board[row][column-1] != 9) {\n          board[row][column-1] += 1;\n        }\n        if (board[row][column+1] != 9) {\n          board[row][column+1] += 1;\n        }\n        if (row == 0) {\n          if (board[row+1][column-1] != 9) {\n            board[row+1][column-1] += 1;\n          }\n          if (board[row+1][column] != 9) {\n            board[row+1][column] += 1;\n          }\n          if (board[row+1][column+1] != 9) {\n            board[row+1][column+1] += 1;\n          }\n        } else {\n          if (row <= 8) {\n            if (board[row-1][column-1] != 9) {\n              board[row-1][column-1] += 1;\n            }\n            if (board[row-1][column] != 9) {\n              board[row-1][column] += 1;\n            }\n            if (board[row-1][column+1] != 9) {\n              board[row-1][column+1] += 1;\n            }\n            if (board[row+1][column-1] != 9) {\n              board[row+1][column-1] += 1;\n            }\n            if (board[row+1][column] != 9) {\n              board[row+1][column] += 1;\n            }\n            if (board[row+1][column+1] != 9) {\n              board[row+1][column+1] += 1;\n            }\n          } else {\n            //significa que row == 9\n            if (board[row-1][column-1] != 9) {\n              board[row-1][column-1] += 1;\n            }\n            if (board[row-1][column] != 9) {\n              board[row-1][column] += 1;\n            }\n            if (board[row-1][column+1] != 9) {\n              board[row-1][column+1] += 1;\n            }\n          }\n        }\n      } else {\n        //significa que column == 9\n        if (board[row][column-1] != 9) {\n          board[row][column-1] += 1;\n        }\n        if (row == 0) {\n          if (board[row+1][column-1] != 9) {\n            board[row+1][column-1] += 1;\n          }\n          if (board[row+1][column] != 9) {\n            board[row+1][column] += 1;\n          }\n        } else {\n          if (row <= 8) {\n            if (board[row-1][column] != 9) {\n              board[row-1][column] += 1;\n            }\n            if (board[row-1][column-1] != 9) {\n              board[row-1][column-1] += 1;\n            }\n            if (board[row+1][column] != 9) {\n              board[row+1][column] += 1;\n            }\n            if (board[row+1][column-1] != 9) {\n              board[row+1][column-1] += 1;\n            }\n          } else {\n            //significa que row == 9\n            if (board[row-1][column] != 9) {\n              board[row-1][column] += 1;\n            }\n            if (board[row-1][column-1] != 9) {\n              board[row-1][column-1] += 1;\n            }\n          }\n        }\n      }\n    }\n  }\n  return board;\n}"]},"metadata":{},"sourceType":"module"}