{"ast":null,"code":"var _jsxFileName = \"/home/valter/Documents/HOMIE/PROYECTO/Proyect/search-mines/app/javascript/components/game/Mines.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      cursor: pointer;\\n      background: transparent;\\n      font-size: 18px;\\n      border-radius: 8px;\\n      color: #0023ff;\\n      border: 2px solid #0023ff;\\n      margin: 1px;\\n      padding: 8px;\\n      transition: 0.5s all ease-out;\\n      &:hover {\\n        background-color: #1cd1d1;\\n        color: white;\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Styled from 'styled-components';\nimport { restartGame as _restartGame, switchFlag, knowTheGameState, markTheBoard } from '../../src/actions/actions';\nimport { getStatusGame } from '../../src/actions/actions';\nimport customFlag from '../../../assets/images/flag';\nimport fire from '../../../assets/images/fire';\nimport bombs from '../../../assets/images/bomb';\nimport one from '../../../assets/images/one';\nimport two from '../../../assets/images/two';\nimport three from '../../../assets/images/three';\nimport four from '../../../assets/images/four';\nimport five from '../../../assets/images/five';\nimport six from '../../../assets/images/six';\nimport seven from '../../../assets/images/seven';\nimport eight from '../../../assets/images/eight';\n\nvar Mines =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mines, _Component);\n\n  function Mines(props) {\n    var _this;\n\n    _classCallCheck(this, Mines);\n\n    console.log(\"estamos en el constructor de Mines\");\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mines).call(this, props));\n    _this.handleRestart = _this.handleRestart.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleFlag = _this.handleFlag.bind(_assertThisInitialized(_this));\n    _this.handleFlip = _this.handleFlip.bind(_assertThisInitialized(_this));\n    _this.elementSelected = _this.elementSelected.bind(_assertThisInitialized(_this));\n    _this.buttonDetect = _this.buttonDetect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Mines, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Estamos en componentDidMount de Mines\");\n      console.log(this.props);\n      this.props.startTheGame(this.props.gameStatus);\n      this.props.verifyTheStatusGame(this.props);\n    }\n  }, {\n    key: \"handleRestart\",\n    value: function handleRestart() {\n      this.props.restartGame();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange() {\n      this.props.updateGame();\n    }\n  }, {\n    key: \"handleFlag\",\n    value: function handleFlag() {\n      this.props.setFlag();\n    }\n  }, {\n    key: \"handleFlip\",\n    value: function handleFlip() {\n      this.props.flipCell();\n    }\n  }, {\n    key: \"buttonDetect\",\n    value: function buttonDetect(event) {\n      if (event.button == 2) {\n        //Boton derecho para colocar o quitar bandera\n        //codigo\n        var flag = 1;\n        this.elementSelected(event, flag);\n      } else {\n        if (event.button == 0) {\n          //Boton izquierdo para descubrir la casilla\n          var flag = 0;\n          this.elementSelected(event, flag);\n        }\n      }\n    }\n  }, {\n    key: \"validateCellStatus\",\n    value: function validateCellStatus(cell, data, props) {\n      console.log(\"llegamos a validateCellStatus\");\n      console.log(cell);\n      console.log(data.cell_status); //En data.cell_status se encuentra el valor de la celda, obtenido desde la\n      //base de datos, del tablero board_status, que contiene los valores de cada celda\n      //de este modo puedo saber si debo colocar una bandera o retirarla, siendo las\n      //unicas opciones para el caso de presionar el click derecho\n\n      var cellPosition = cell.split(\" \");\n\n      if (data.cell_status == 0) {\n        console.log(\"estamos listos para colocar una bandera\");\n        console.log(cellPosition);\n        console.log(cellPosition[0]);\n        console.log(cellPosition[1]);\n        var image = new Image();\n        image.src = customFlag;\n        $(\".\".concat(cellPosition[0], \".\").concat(cellPosition[1])).append(image);\n        $(\".\".concat(cellPosition[0], \".\").concat(cellPosition[1])).css('background', '#1636ad');\n        var coordinates = cellPosition[1].split(\"\");\n        console.log(coordinates);\n        console.log(\"verificando acceso a las props\");\n        console.log(props); //Despues de poner la bandera hay que marcar el tablero board_status que contiene los estados de celda:\n        //y que se encuentra en la base de datos, para ello se envia el ID del tablero de juego actual\n\n        props.setFlag(props.gameId, coordinates);\n      } else {\n        if (data.cell_status == 2) {\n          //significa que tiene una bandera, la quitamos\n          $(\".\".concat(cellPosition[0], \".\").concat(cellPosition[1])).append(image);\n          $(\".\".concat(cellPosition[0], \".\").concat(cellPosition[1])).css('background', '#1636ad');\n        }\n      }\n    }\n  }, {\n    key: \"elementSelected\",\n    value: function elementSelected(event, flag) {\n      if (event.srcElement) {\n        var tag = event.srcElement.tagName;\n        console.log(\"otros navegadores\"); //ELIMINAR ESTA OPCION\n      } else {\n        if (event.target) {\n          if (flag == 1) {\n            //verificar el valor que tiene la celda para saber si se coloca\n            //o se retira la bandera\n            console.log(\"Se ha presionado el click DERECHO!!\");\n\n            document.oncontextmenu = function () {\n              return false;\n            };\n\n            if (event.target.tagName == \"IMG\") {\n              var cell = event.target.parentElement.className;\n              console.log(\"nombre de la clase padre: \".concat(cell));\n            } else {\n              var cell = event.target.className;\n              console.log(\"nombre de la clase \".concat(cell));\n            }\n\n            var position = cell.split(\" \")[1];\n            var coordinates = position.split(\"\");\n            this.props.statusFlag(coordinates, this.validateCellStatus, cell, this.props);\n          } else {\n            console.log(\"Se ha presionado el click IZQUIERDO!!\");\n            console.log(event.target.className);\n            var cell = event.target.className;\n            var position = cell.split(\" \")[1]; //this.props.seeBoard()\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"Estamos en el render de Mines\");\n      var Button = Styled.button(_templateObject());\n      var table = document.createElement(\"table\");\n      table.cellSpacing = \"10\";\n      var tblBody = document.createElement(\"tbody\");\n\n      for (var row = 0; row < 10; row++) {\n        var rows = document.createElement(\"tr\");\n\n        for (var column = 0; column < 10; column++) {\n          var columns = document.createElement(\"td\"); //var image = document.createElement(\"img\");\n          //image.src=\"packs/media/images/flag-8654d5a5.png\";\n\n          columns.className = \"cell \".concat(row).concat(column); //columns.appendChild(image);\n\n          rows.appendChild(columns);\n        }\n\n        ;\n        tblBody.appendChild(rows);\n      }\n\n      ;\n      table.appendChild(tblBody);\n      console.log(\"Vamos a entrar al return del render de Mines\");\n      return React.createElement(\"div\", {\n        className: \"game-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"restart-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleRestart,\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Reset Game\")), React.createElement(\"div\", {\n        className: \"game-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"help-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Estado celda clickeada: \", this.props.cellStatus), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Estado del juego: \", this.props.gameStatus), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"GameID: \", this.props.gameId), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"valor de bandera: \", this.props.cellValue), React.createElement(\"p\", {\n        className: \"prueba-componente\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Pintar Fondo\")), React.createElement(\"div\", {\n        className: \"game-board-container\",\n        onMouseDown: this.buttonDetect,\n        dangerouslySetInnerHTML: {\n          __html: table.outerHTML\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Prueba\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Mines;\n}(Component);\n\nfunction mapStateToProps(state) {\n  console.log(\"estamos en mapStateToProps Mines\");\n  return {\n    cellStatus: state.gameReducer.cellStatus.status,\n    flippedBoxes: state.gameReducer.flippedBoxes,\n    gameStatus: state.gameReducer.gameStatus.status,\n    gameId: state.gameReducer.gameId,\n    cellValue: state.gameReducer.cellValue\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  console.log(\"estamos en mapDispatchToProps Mines\");\n  return {\n    startTheGame: function startTheGame(gameStatus) {\n      return dispatch(knowTheGameState(gameStatus));\n    },\n    verifyTheStatusGame: function verifyTheStatusGame(props) {\n      return dispatch(getStatusGame(props));\n    },\n    restartGame: function restartGame() {\n      return dispatch(_restartGame());\n    },\n    statusFlag: function statusFlag(coordinates, validateCellStatus, cell, props) {\n      return dispatch(switchFlag(coordinates, validateCellStatus, cell, props));\n    },\n    setFlag: function setFlag(gameId, coordinates) {\n      return dispatch(markTheBoard(gameId, coordinates));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mines);","map":{"version":3,"sources":["/home/valter/Documents/HOMIE/PROYECTO/Proyect/search-mines/app/javascript/components/game/Mines.jsx"],"names":["React","Component","connect","Styled","restartGame","switchFlag","knowTheGameState","markTheBoard","getStatusGame","customFlag","fire","bombs","one","two","three","four","five","six","seven","eight","Mines","props","console","log","handleRestart","bind","handleChange","handleFlag","handleFlip","elementSelected","buttonDetect","startTheGame","gameStatus","verifyTheStatusGame","updateGame","setFlag","flipCell","event","button","flag","cell","data","cell_status","cellPosition","split","image","Image","src","$","append","css","coordinates","gameId","srcElement","tag","tagName","target","document","oncontextmenu","parentElement","className","position","statusFlag","validateCellStatus","Button","table","createElement","cellSpacing","tblBody","row","rows","column","columns","appendChild","cellStatus","cellValue","__html","outerHTML","mapStateToProps","state","gameReducer","status","flippedBoxes","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Styled from 'styled-components';\nimport {restartGame, switchFlag, knowTheGameState, markTheBoard} from '../../src/actions/actions'\nimport {getStatusGame} from '../../src/actions/actions'\nimport customFlag from '../../../assets/images/flag';\nimport fire from '../../../assets/images/fire';\nimport bombs from '../../../assets/images/bomb';\nimport one from '../../../assets/images/one';\nimport two from '../../../assets/images/two';\nimport three from '../../../assets/images/three';\nimport four from '../../../assets/images/four';\nimport five from '../../../assets/images/five';\nimport six from '../../../assets/images/six';\nimport seven from '../../../assets/images/seven';\nimport eight from '../../../assets/images/eight';\n\nclass Mines extends Component {\n  constructor(props) {\n    console.log(\"estamos en el constructor de Mines\");\n    super(props);\n    this.handleRestart = this.handleRestart.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFlag = this.handleFlag.bind(this);\n    this.handleFlip = this.handleFlip.bind(this);\n    this.elementSelected = this.elementSelected.bind(this);\n    this.buttonDetect = this.buttonDetect.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"Estamos en componentDidMount de Mines\");\n    console.log(this.props);\n    this.props.startTheGame(this.props.gameStatus)\n    this.props.verifyTheStatusGame(this.props)\n  }\n  handleRestart() {\n    this.props.restartGame();\n  }\n  handleChange() {\n    this.props.updateGame();\n  }\n  handleFlag() {\n    this.props.setFlag();\n  }\n  handleFlip() {\n    this.props.flipCell();\n  }\n\n  buttonDetect(event){\n    if (event.button==2) { //Boton derecho para colocar o quitar bandera\n      //codigo\n      var flag = 1;\n      this.elementSelected(event, flag);\n    } else {\n      if (event.button == 0) { //Boton izquierdo para descubrir la casilla\n        var flag = 0;\n        this.elementSelected(event, flag);\n      }\n    }\n  }\n  validateCellStatus(cell, data, props){\n    console.log(\"llegamos a validateCellStatus\")\n    console.log(cell)\n    console.log(data.cell_status)\n    //En data.cell_status se encuentra el valor de la celda, obtenido desde la\n    //base de datos, del tablero board_status, que contiene los valores de cada celda\n    //de este modo puedo saber si debo colocar una bandera o retirarla, siendo las\n    //unicas opciones para el caso de presionar el click derecho\n    var cellPosition = cell.split(\" \");\n    if (data.cell_status == 0) {\n      console.log(\"estamos listos para colocar una bandera\");\n      console.log(cellPosition);\n      console.log(cellPosition[0]);\n      console.log(cellPosition[1]);\n      var image = new Image();\n      image.src= customFlag\n      $(`.${cellPosition[0]}.${cellPosition[1]}`).append(image)\n      $(`.${cellPosition[0]}.${cellPosition[1]}`).css('background', '#1636ad');\n      var coordinates = cellPosition[1].split(\"\");\n      console.log(coordinates)\n      console.log(\"verificando acceso a las props\")\n      console.log(props)\n      //Despues de poner la bandera hay que marcar el tablero board_status que contiene los estados de celda:\n      //y que se encuentra en la base de datos, para ello se envia el ID del tablero de juego actual\n      props.setFlag(props.gameId, coordinates)\n    } else {\n      if (data.cell_status == 2) {\n        //significa que tiene una bandera, la quitamos\n        $(`.${cellPosition[0]}.${cellPosition[1]}`).append(image)\n        $(`.${cellPosition[0]}.${cellPosition[1]}`).css('background', '#1636ad');\n      }\n    }\n  }\n  elementSelected(event, flag){\n    if (event.srcElement) {\n      var tag = event.srcElement.tagName;\n      console.log(\"otros navegadores\")\n      //ELIMINAR ESTA OPCION\n    }\n    else {\n      if (event.target) {\n        if (flag == 1) {\n          //verificar el valor que tiene la celda para saber si se coloca\n          //o se retira la bandera\n          console.log(\"Se ha presionado el click DERECHO!!\");\n          document.oncontextmenu = function(){return false}\n          if (event.target.tagName == \"IMG\") {\n            var cell = event.target.parentElement.className;\n            console.log(`nombre de la clase padre: ${cell}`);\n          } else {\n            var cell = event.target.className;\n            console.log(`nombre de la clase ${cell}`);\n          }\n          var position = cell.split(\" \")[1];\n          var coordinates = position.split(\"\");\n          this.props.statusFlag(coordinates, this.validateCellStatus, cell, this.props);\n        } else {\n          console.log(\"Se ha presionado el click IZQUIERDO!!\")\n          console.log(event.target.className)\n          var cell = event.target.className\n          var position = cell.split(\" \")[1]\n          //this.props.seeBoard()\n        }\n      }\n    }\n  }\n\n  render() {\n    console.log(\"Estamos en el render de Mines\")\n    const Button = Styled.button`\n      cursor: pointer;\n      background: transparent;\n      font-size: 18px;\n      border-radius: 8px;\n      color: #0023ff;\n      border: 2px solid #0023ff;\n      margin: 1px;\n      padding: 8px;\n      transition: 0.5s all ease-out;\n      &:hover {\n        background-color: #1cd1d1;\n        color: white;\n      }\n    `;\n    var table = document.createElement(\"table\");\n    table.cellSpacing = \"10\";\n    var tblBody = document.createElement(\"tbody\");\n    for (var row = 0; row < 10; row++) {\n      var rows = document.createElement(\"tr\");\n      for (var column = 0; column < 10; column++) {\n        var columns = document.createElement(\"td\");\n        //var image = document.createElement(\"img\");\n        //image.src=\"packs/media/images/flag-8654d5a5.png\";\n        columns.className = `cell ${row}${column}`\n        //columns.appendChild(image);\n        rows.appendChild(columns);\n      };\n      tblBody.appendChild(rows);\n    };\n    table.appendChild(tblBody);\n    console.log(\"Vamos a entrar al return del render de Mines\")\n    return (\n      <div className=\"game-container\">\n        <div className=\"header\">\n          <div className=\"title\"></div>\n        </div>\n        <div className=\"restart-button\">\n          <Button onClick={this.handleRestart} className=\"btn btn-secondary\">\n            Reset Game\n          </Button>\n        </div>\n        <div className=\"game-background\">\n          <div className=\"help-container\">\n            <p>Estado celda clickeada: {this.props.cellStatus}</p>\n            <p>Estado del juego: {this.props.gameStatus}</p>\n            <p>GameID: {this.props.gameId}</p>\n            <p>valor de bandera: {this.props.cellValue}</p>\n            <p className=\"prueba-componente\">Pintar Fondo</p>\n          </div>\n          <div className=\"game-board-container\" onMouseDown={this.buttonDetect}\n            dangerouslySetInnerHTML={{ __html: table.outerHTML }}>\n          </div>\n        </div>\n        <div className=\"Prueba\">\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(\"estamos en mapStateToProps Mines\");\n  return {\n    cellStatus: state.gameReducer.cellStatus.status,\n    flippedBoxes: state.gameReducer.flippedBoxes,\n    gameStatus: state.gameReducer.gameStatus.status,\n    gameId: state.gameReducer.gameId,\n    cellValue: state.gameReducer.cellValue\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  console.log(\"estamos en mapDispatchToProps Mines\");\n  return {\n    startTheGame: (gameStatus) => dispatch(knowTheGameState(gameStatus)),\n    verifyTheStatusGame: (props) => dispatch(getStatusGame(props)),\n    restartGame: () => dispatch(restartGame()),\n    statusFlag: (coordinates, validateCellStatus, cell, props) => dispatch(switchFlag(coordinates, validateCellStatus, cell, props)),\n    setFlag: (gameId, coordinates) => dispatch(markTheBoard(gameId, coordinates))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mines);"]},"metadata":{},"sourceType":"module"}